---
export interface Props {
  title: string;
  medium?: string;
  year?: string;
  description?: string;
  attribution?: string;
  imageSlot?: boolean;
}

const {
  title,
  medium,
  year,
  description,
  attribution,
  imageSlot = true,
} = Astro.props;
---

<article class="project-two-column">
  <div class="project-content">
    <div class="left-column">
      {
        imageSlot && (
          <div class="image-container">
            <slot name="image">
              <div class="placeholder-image" />
            </slot>
          </div>
        )
      }

      <div class="left-content">
        <slot name="left-content">
          <h2 class="project-title-left">{title}</h2>
          <hr class="title-divider" />
          <div class="project-description">
            <slot name="description">
              {description && <p>{description}</p>}
            </slot>
          </div>
        </slot>
      </div>
    </div>

    <div class="right-column">
      <slot name="right-content">
        <h1 class="project-title">{title}</h1>

        {
          (medium || year) && (
            <div class="project-meta">
              {medium && <p class="medium">{medium}</p>}
              {year && <p class="year">{year}</p>}
            </div>
          )
        }

        <div class="project-body">
          <slot />
        </div>

        {
          attribution && (
            <div class="attribution">
              <p>{attribution}</p>
            </div>
          )
        }
      </slot>
    </div>
  </div>
</article>

<style>
  .project-two-column {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .project-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2.5rem;
    align-items: start;
  }

  .left-column {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .image-container {
    width: 100%;
    margin-bottom: 1rem;
  }

  .placeholder-image {
    width: 100%;
    height: 500px;
    background: #e15a7c;
    border-radius: 0;
  }

  .project-title-left {
    font-family: "Space Mono", monospace;
    font-size: 1.5rem;
    font-weight: 400;
    color: #000;
    margin: 0 0 1rem 0;
    line-height: 1.2;
  }

  .title-divider {
    border: none;
    border-top: 2px solid #000;
    width: 100%;
    margin: 0 0 1rem 0;
  }

  .project-description {
    font-family: "Source Code Pro", monospace;
    font-size: 0.875rem;
    line-height: 1.4;
    color: #000;
  }

  .right-column {
    padding-top: 0;
  }

  .project-title {
    font-family: "Space Mono", monospace;
    font-size: 1.5rem;
    font-weight: 400;
    color: #000;
    margin: 0 0 1rem 0;
    line-height: 1.2;
  }

  .project-meta {
    margin-bottom: 2rem;
  }

  .project-meta p {
    font-family: "Source Code Pro", monospace;
    font-size: 0.875rem;
    margin: 0;
    line-height: 1.4;
  }

  .medium {
    color: #e15a7c;
    font-weight: 400;
  }

  .year {
    color: #e15a7c;
    font-weight: 400;
  }

  .project-body {
    font-family: "Source Code Pro", monospace;
    font-size: 0.875rem;
    line-height: 1.6;
    color: #000;
  }

  .project-body p {
    margin: 0 0 1rem 0;
  }

  .project-body p:last-child {
    margin-bottom: 0;
  }

  .attribution {
    margin-top: 3rem;
    padding-top: 1rem;
    border-top: 1px solid #eee;
  }

  .attribution p {
    font-family: "Source Code Pro", monospace;
    font-size: 0.75rem;
    color: #666;
    margin: 0;
    line-height: 1.4;
  }

  @media (max-width: 768px) {
    .project-two-column {
      padding: 1rem;
    }

    .project-content {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .left-column {
      order: 2;
    }

    .right-column {
      order: 1;
    }

    .placeholder-image {
      height: 300px;
    }
  }
</style>
